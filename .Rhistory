setwd("~/capstone-the-westerlands/R")
getwd()
runApp('SveitarfelogFasteignir')
getwd()
runApp('SveitarfelogFasteignir')
runApp()
print(Sys.getenv("PG_PASSWORD"))
readRenviron(".Renviron")
print(Sys.getenv("PG_PASSWORD"))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(readxl)
library(readxl)
library(shiny)
library(ggplot2)
path <- "~/Capstone-toflur.xlsx"
dat <- read_excel(path, 3)
library(readxl)
library(shiny)
library(ggplot2)
path <- "Capstone-toflur.xlsx"
dat <- read_excel(path, 3)
visitalabygg <- read_excel(path,5)
visitala<- read_excel(path, 4)
tekjur <- read_excel(path, 6, skip = 2)
fasteignaverd <-read_excel(path, 1, skip = 1)
#REGEX fyrir að breyta íslenskum stöfum í enska fyrir dálkaheitin
new_names <- gsub("ð", "d", names(dat))
new_names <- gsub("Ð", "D", new_names)
new_names <- gsub("þ", "th", new_names)
new_names <- gsub("Þ", "Th", new_names)
new_names <- gsub("æ", "ae", new_names)
new_names <- gsub("Æ", "Ae", new_names)
new_names <- gsub("ö", "o", new_names)
new_names <- gsub("Ö", "O", new_names)
new_names <- gsub("á", "a", new_names)
new_names <- gsub("Á", "A", new_names)
new_names <- gsub("é", "e", new_names)
new_names <- gsub("É", "E", new_names)
new_names <- gsub("í", "i", new_names)
new_names <- gsub("Í", "I", new_names)
new_names <- gsub("ó", "o", new_names)
new_names <- gsub("Ó", "O", new_names)
new_names <- gsub("ú", "u", new_names)
new_names <- gsub("Ú", "U", new_names)
new_names <- gsub("ý", "y", new_names)
new_names <- gsub("Ý", "Y", new_names)
names(dat) <- new_names
library(dplyr)
# REGEX fyrir að taka út NA gildi
filtered_dat <- dat[
grepl("^[0-9]+(\\.[0-9]+)?$", dat$`Fermetraverd eftir sveitafelogum arid 2022`) &
grepl("^[0-9]+(\\.[0-9]+)?$", dat$`Midgildi tekna 2023`),
]
# REGEX til að breyta í töluleg gildi
filtered_dat$`Fermetraverd eftir sveitafelogum arid 2022` <- as.numeric(filtered_dat$`Fermetraverd eftir sveitafelogum arid 2022`)
filtered_dat$`Midgildi tekna 2023` <- as.numeric(filtered_dat$`Midgildi tekna 2023`)
# REGEX til að setja gildin í hækkandi röð
filtered_dat <- filtered_dat[order(filtered_dat$`Fermetraverd eftir sveitafelogum arid 2022`), ]
filtered_dat <- filtered_dat %>%
arrange(`Fermetraverd eftir sveitafelogum arid 2022`)
##endurstilla víssitöluna þannig að hún byrji í 100 árið 1994
upphafsgildi <- visitala$Vísitala[1]
# Breyttu vísitölunni þannig að hún byrji í 100
visitala$Vísitala<- round((visitala$Vísitala / upphafsgildi) * 100 ,2)
#nota REGEX til að flokka út bara þann tíma sem endar á 01
visitala <- visitala[grepl("01$", visitala$Tími), ]
visitala$Tími <- gsub("M[0-9]{2}", "", visitala$Tími)  # Fjarlægja MXX
visitala$Tími <- as.numeric(visitala$Tími)  # Breyta í tölulegt gildi
visitalabygg <- visitalabygg %>%
filter(Mánuður == 1) # notum bara fyrsta mánuðinn í visitalabygg líka
visitala<- visitala %>%
slice(-n())
sameinuð_tafla <- visitalabygg %>%
left_join(visitala, by = c("Ár" = "Tími")) #búum til nýja töflu til þess að nota
fasteignaverd <- fasteignaverd %>%
mutate(across(-SVEITARFELAG, ~ as.numeric(gsub(",", ".", .))))
tekjur <- tekjur %>%
mutate(across(-Sveitarfelag, ~ . / 12))
library(shiny)
library(ggplot2)
library(dplyr)
library(tidyr)
# Gögn fyrir fyrstu útfærsla (scatter plot)
scatter_data <- data.frame(
Sveitarfelag = rep(filtered_dat$`samsetningartafla`, 2),
Type = c(rep("Fermetraverð", nrow(filtered_dat)), rep("Laun", nrow(filtered_dat))),
Value = c(filtered_dat$`Fermetraverd eftir sveitafelogum arid 2022`,
filtered_dat$`Midgildi tekna 2023`)
)
sorted_municipalities <- sort(unique(scatter_data$Sveitarfelag))
# UI
ui <- fluidPage(
titlePanel("Fasteignamarkaðurinn"),
# Tabset fyrir mismunandi forrit
tabsetPanel(
# Fyrsti flipa fyrir línurit
tabPanel("Vísitala íbúðarverðs",
sidebarLayout(
sidebarPanel(
helpText("Línurit sem sýnir breytingu á vísitölum.")
),
mainPanel(
plotOutput("linePlot")
)
)
),
# Annar flipa fyrir sameinað tekju- og fasteignaverðsgraf
tabPanel("Þróun á tekjum og fasteignaverði",
sidebarLayout(
sidebarPanel(
selectInput("sveitarfelag", "Veldu sveitarfélag:", choices = unique(tekjur$Sveitarfelag))
),
mainPanel(
plotOutput("combinedPlot")
)
)
),
# Þriðji flipa fyrir scatter plot
tabPanel("Fermetraverð og laun sveitarfélaga",
sidebarLayout(
sidebarPanel(
selectizeInput("sveitarfelog_plot", "Veldu sveitarfélög:",
choices = sorted_municipalities,
selected = sorted_municipalities[1:5],
multiple = TRUE),
radioButtons("plot_type", "Veldu hvaða gögn þú vilt sjá:",
choices = list("Fermetraverð og laun" = "fermetraverð",
"Útborgun og laun" = "útborgun")),
actionButton("clear_plot", "Afvelja öll sveitarfélög"),
br(), hr(),
h4("Reiknivél fyrir húsnæðissparnað"),
selectizeInput("sveitarfelag_calc", "Veldu sveitarfélag:",
choices = sorted_municipalities,
selected = sorted_municipalities[1],
multiple = FALSE),
numericInput("savings_rate", "Hlutfall launa í húsnæðissparnað (%):", value = 33, min = 1, max = 100),
radioButtons("buyer_type", "Hver er að kaupa?:", choices = list("Einstaklingur" = "single", "Par" = "couple"), selected = "single"),
htmlOutput("savings_result")
),
mainPanel(
plotOutput("scatterPlot")
)
)
)
)
)
# Server
server <- function(input, output, session) {
# Fyrsta útfærsla: Scatter Plot
observeEvent(input$clear_plot, {
updateSelectizeInput(session, "sveitarfelog_plot", selected = character(0))
})
output$scatterPlot <- renderPlot({
filtered_data <- subset(scatter_data, Sveitarfelag %in% input$sveitarfelog_plot)
if (input$plot_type == "fermetraverð") {
filtered_data$Y_Value <- ifelse(filtered_data$Type == "Fermetraverð",
filtered_data$Value, filtered_data$Value / 10)
y_axis_label <- "Fermetraverð (þús. kr.)"
y_limits <- c(0, 800)
sec_axis_transformation <- ~ . * 10
legend_labels <- c("Fermetraverð", "Laun")
} else {
filtered_data$Y_Value <- ifelse(filtered_data$Type == "Fermetraverð",
filtered_data$Value * 12, filtered_data$Value)
y_axis_label <- "Útborgun (þús. kr.)"
y_limits <- c(0, 8000)
sec_axis_transformation <- ~ .
legend_labels <- c("Útborgun", "Laun")
}
ggplot(filtered_data, aes(x = Sveitarfelag, y = Y_Value, color = Type)) +
geom_point(size = 4) +
scale_y_continuous(
name = y_axis_label,
limits = y_limits,
sec.axis = sec_axis(sec_axis_transformation, name = "Miðgildi launa (þús. kr.)")
) +
labs(x = "Sveitarfélag", title = "Scatter plot: Verð og Laun eftir sveitarfélögum") +
scale_color_manual(values = c("Fermetraverð" = "#53c68c", "Laun" = "darkblue"),
labels = legend_labels) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
plot.title = element_text(size = 12)
)
})
output$savings_result <- renderUI({
selected_data <- subset(scatter_data, Sveitarfelag == input$sveitarfelag_calc & Type == "Laun")
income <- selected_data$Value
selected_data <- subset(scatter_data, Sveitarfelag == input$sveitarfelag_calc & Type == "Fermetraverð")
down_payment <- selected_data$Value * 12
monthly_savings <- (income * (input$savings_rate / 100)) / 12
months_needed <- ceiling(down_payment / monthly_savings)
if (input$buyer_type == "couple") {
months_needed <- ceiling(months_needed / 2)
}
if (months_needed >= 12) {
years <- floor(months_needed / 12)
months <- months_needed %% 12
result_text <- paste("Með", input$savings_rate, "% sparnað nærðu útborgun fyrir 80 fm íbúð á", years, "ári og", months, "mánuðum.")
} else {
result_text <- paste("Með", input$savings_rate, "% sparnað nærðu útborgun á", months_needed, "mánuðum.")
}
tags$div(style = "background-color: #ff9999; padding: 15px; border-radius: 8px; font-weight: bold; font-size: 16px;",
result_text)
})
# Annar flipa: Línurit
output$linePlot <- renderPlot({
ggplot(data = sameinuð_tafla, aes(x = Ár)) +
geom_line(aes(y = Vísitala, color = "Vísitala neysluverðs án húsnæðis"), size = 1) +
geom_line(aes(y = Vísitala_fjölb, color = "Vísitala fjölbílishús"), size = 1) +
geom_line(aes(y = Visitala_serb, color = "Vísitala sérbíli"), size = 1) +
geom_line(aes(y = Visitala_heild, color = "Vísitala íbúðarverðs"), size = 1) +
labs(title = "Vísitölur yfir Tíma", x = "Ár", y = "Vísitala") +
scale_color_manual(name = "Vísitala", values = c(
"Vísitala neysluverðs án húsnæðis" = "green",
"Vísitala fjölbílishús" = "orange",
"Vísitala sérbíli" = "blue",
"Vísitala íbúðarverðs" = "red"
)) +
theme_minimal()
})
# Þriðji flipa: Samanburður á tekjum og fasteignaverði
output$combinedPlot <- renderPlot({
tekjur_filtered <- tekjur %>%
filter(Sveitarfelag == input$sveitarfelag) %>%
pivot_longer(cols = -Sveitarfelag, names_to = "Ar", values_to = "Tekjur") %>%
mutate(Ar = as.numeric(Ar)) %>%
filter(Ar >= 2010)
fasteignaverd_filtered <- fasteignaverd %>%
filter(SVEITARFELAG == input$sveitarfelag) %>%
pivot_longer(cols = -SVEITARFELAG, names_to = "Ar", values_to = "Fasteignaverð") %>%
mutate(Ar = as.numeric(Ar)) %>%
filter(Ar >= 2010)
combined_data <- merge(tekjur_filtered, fasteignaverd_filtered, by = "Ar")
ggplot(combined_data, aes(x = Ar)) +
geom_line(aes(y = Tekjur, color = "Mánaðaralegar ráðstöfunartekjur"), size = 1) +
geom_line(aes(y = Fasteignaverð, color = "Meðal fermetraverð"), size = 1) +
labs(title = "Þróun á Tekjum og Fasteignaverði", x = "Ár", y = "Þús. krónur") +
scale_color_manual(name = "Breytur", values = c("Mánaðaralegar ráðstöfunartekjur" = "darkblue", "Meðal fermetraverð" = "#53c68c")) +
theme_minimal()
})
}
# Keyra app
shinyApp(ui = ui, server = server)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(readxl)
library(shiny)
library(ggplot2)
path <- "Capstone-toflur.xlsx"
dat <- read_excel(path, 3)
visitalabygg <- read_excel(path,5)
visitala<- read_excel(path, 4)
tekjur <- read_excel(path, 6, skip = 2)
fasteignaverd <-read_excel(path, 1, skip = 1)
#REGEX fyrir að breyta íslenskum stöfum í enska fyrir dálkaheitin
new_names <- gsub("ð", "d", names(dat))
new_names <- gsub("Ð", "D", new_names)
new_names <- gsub("þ", "th", new_names)
new_names <- gsub("Þ", "Th", new_names)
new_names <- gsub("æ", "ae", new_names)
new_names <- gsub("Æ", "Ae", new_names)
new_names <- gsub("ö", "o", new_names)
new_names <- gsub("Ö", "O", new_names)
new_names <- gsub("á", "a", new_names)
new_names <- gsub("Á", "A", new_names)
new_names <- gsub("é", "e", new_names)
new_names <- gsub("É", "E", new_names)
new_names <- gsub("í", "i", new_names)
new_names <- gsub("Í", "I", new_names)
new_names <- gsub("ó", "o", new_names)
new_names <- gsub("Ó", "O", new_names)
new_names <- gsub("ú", "u", new_names)
new_names <- gsub("Ú", "U", new_names)
new_names <- gsub("ý", "y", new_names)
new_names <- gsub("Ý", "Y", new_names)
names(dat) <- new_names
library(dplyr)
# REGEX fyrir að taka út NA gildi
filtered_dat <- dat[
grepl("^[0-9]+(\\.[0-9]+)?$", dat$`Fermetraverd eftir sveitafelogum arid 2022`) &
grepl("^[0-9]+(\\.[0-9]+)?$", dat$`Midgildi tekna 2023`),
]
# REGEX til að breyta í töluleg gildi
filtered_dat$`Fermetraverd eftir sveitafelogum arid 2022` <- as.numeric(filtered_dat$`Fermetraverd eftir sveitafelogum arid 2022`)
filtered_dat$`Midgildi tekna 2023` <- as.numeric(filtered_dat$`Midgildi tekna 2023`)
# REGEX til að setja gildin í hækkandi röð
filtered_dat <- filtered_dat[order(filtered_dat$`Fermetraverd eftir sveitafelogum arid 2022`), ]
filtered_dat <- filtered_dat %>%
arrange(`Fermetraverd eftir sveitafelogum arid 2022`)
##endurstilla víssitöluna þannig að hún byrji í 100 árið 1994
upphafsgildi <- visitala$Vísitala[1]
# Breyttu vísitölunni þannig að hún byrji í 100
visitala$Vísitala<- round((visitala$Vísitala / upphafsgildi) * 100 ,2)
#nota REGEX til að flokka út bara þann tíma sem endar á 01
visitala <- visitala[grepl("01$", visitala$Tími), ]
visitala$Tími <- gsub("M[0-9]{2}", "", visitala$Tími)  # Fjarlægja MXX
visitala$Tími <- as.numeric(visitala$Tími)  # Breyta í tölulegt gildi
visitalabygg <- visitalabygg %>%
filter(Mánuður == 1) # notum bara fyrsta mánuðinn í visitalabygg líka
visitala<- visitala %>%
slice(-n())
sameinuð_tafla <- visitalabygg %>%
left_join(visitala, by = c("Ár" = "Tími")) #búum til nýja töflu til þess að nota
fasteignaverd <- fasteignaverd %>%
mutate(across(-SVEITARFELAG, ~ as.numeric(gsub(",", ".", .))))
tekjur <- tekjur %>%
mutate(across(-Sveitarfelag, ~ . / 12))
library(shiny)
library(ggplot2)
library(dplyr)
library(tidyr)
# Gögn fyrir fyrstu útfærsla (scatter plot)
scatter_data <- data.frame(
Sveitarfelag = rep(filtered_dat$`samsetningartafla`, 2),
Type = c(rep("Fermetraverð", nrow(filtered_dat)), rep("Laun", nrow(filtered_dat))),
Value = c(filtered_dat$`Fermetraverd eftir sveitafelogum arid 2022`,
filtered_dat$`Midgildi tekna 2023`)
)
sorted_municipalities <- sort(unique(scatter_data$Sveitarfelag))
# UI
ui <- fluidPage(
titlePanel("Fasteignamarkaðurinn"),
# Tabset fyrir mismunandi forrit
tabsetPanel(
# Fyrsti flipa fyrir línurit
tabPanel("Vísitala íbúðarverðs",
sidebarLayout(
sidebarPanel(
helpText("Línurit sem sýnir breytingu á vísitölum.")
),
mainPanel(
plotOutput("linePlot")
)
)
),
# Annar flipa fyrir sameinað tekju- og fasteignaverðsgraf
tabPanel("Þróun á tekjum og fasteignaverði",
sidebarLayout(
sidebarPanel(
selectInput("sveitarfelag", "Veldu sveitarfélag:", choices = unique(tekjur$Sveitarfelag))
),
mainPanel(
plotOutput("combinedPlot")
)
)
),
# Þriðji flipa fyrir scatter plot
tabPanel("Fermetraverð og laun sveitarfélaga",
sidebarLayout(
sidebarPanel(
selectizeInput("sveitarfelog_plot", "Veldu sveitarfélög:",
choices = sorted_municipalities,
selected = sorted_municipalities[1:5],
multiple = TRUE),
radioButtons("plot_type", "Veldu hvaða gögn þú vilt sjá:",
choices = list("Fermetraverð og laun" = "fermetraverð",
"Útborgun og laun" = "útborgun")),
actionButton("clear_plot", "Afvelja öll sveitarfélög"),
br(), hr(),
h4("Reiknivél fyrir húsnæðissparnað"),
selectizeInput("sveitarfelag_calc", "Veldu sveitarfélag:",
choices = sorted_municipalities,
selected = sorted_municipalities[1],
multiple = FALSE),
numericInput("savings_rate", "Hlutfall launa í húsnæðissparnað (%):", value = 33, min = 1, max = 100),
radioButtons("buyer_type", "Hver er að kaupa?:", choices = list("Einstaklingur" = "single", "Par" = "couple"), selected = "single"),
htmlOutput("savings_result")
),
mainPanel(
plotOutput("scatterPlot")
)
)
)
)
)
# Server
server <- function(input, output, session) {
# Fyrsta útfærsla: Scatter Plot
observeEvent(input$clear_plot, {
updateSelectizeInput(session, "sveitarfelog_plot", selected = character(0))
})
output$scatterPlot <- renderPlot({
filtered_data <- subset(scatter_data, Sveitarfelag %in% input$sveitarfelog_plot)
if (input$plot_type == "fermetraverð") {
filtered_data$Y_Value <- ifelse(filtered_data$Type == "Fermetraverð",
filtered_data$Value, filtered_data$Value / 10)
y_axis_label <- "Fermetraverð (þús. kr.)"
y_limits <- c(0, 800)
sec_axis_transformation <- ~ . * 10
legend_labels <- c("Fermetraverð", "Laun")
} else {
filtered_data$Y_Value <- ifelse(filtered_data$Type == "Fermetraverð",
filtered_data$Value * 12, filtered_data$Value)
y_axis_label <- "Útborgun (þús. kr.)"
y_limits <- c(0, 8000)
sec_axis_transformation <- ~ .
legend_labels <- c("Útborgun", "Laun")
}
ggplot(filtered_data, aes(x = Sveitarfelag, y = Y_Value, color = Type)) +
geom_point(size = 4) +
scale_y_continuous(
name = y_axis_label,
limits = y_limits,
sec.axis = sec_axis(sec_axis_transformation, name = "Miðgildi launa (þús. kr.)")
) +
labs(x = "Sveitarfélag", title = "Scatter plot: Verð og Laun eftir sveitarfélögum") +
scale_color_manual(values = c("Fermetraverð" = "#53c68c", "Laun" = "darkblue"),
labels = legend_labels) +
theme_minimal() +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
legend.text = element_text(size = 10),
plot.title = element_text(size = 12)
)
})
output$savings_result <- renderUI({
selected_data <- subset(scatter_data, Sveitarfelag == input$sveitarfelag_calc & Type == "Laun")
income <- selected_data$Value
selected_data <- subset(scatter_data, Sveitarfelag == input$sveitarfelag_calc & Type == "Fermetraverð")
down_payment <- selected_data$Value * 12
monthly_savings <- (income * (input$savings_rate / 100)) / 12
months_needed <- ceiling(down_payment / monthly_savings)
if (input$buyer_type == "couple") {
months_needed <- ceiling(months_needed / 2)
}
if (months_needed >= 12) {
years <- floor(months_needed / 12)
months <- months_needed %% 12
result_text <- paste("Með", input$savings_rate, "% sparnað nærðu útborgun fyrir 80 fm íbúð á", years, "ári og", months, "mánuðum.")
} else {
result_text <- paste("Með", input$savings_rate, "% sparnað nærðu útborgun á", months_needed, "mánuðum.")
}
tags$div(style = "background-color: #ff9999; padding: 15px; border-radius: 8px; font-weight: bold; font-size: 16px;",
result_text)
})
# Annar flipa: Línurit
output$linePlot <- renderPlot({
ggplot(data = sameinuð_tafla, aes(x = Ár)) +
geom_line(aes(y = Vísitala, color = "Vísitala neysluverðs án húsnæðis"), size = 1) +
geom_line(aes(y = Vísitala_fjölb, color = "Vísitala fjölbílishús"), size = 1) +
geom_line(aes(y = Visitala_serb, color = "Vísitala sérbíli"), size = 1) +
geom_line(aes(y = Visitala_heild, color = "Vísitala íbúðarverðs"), size = 1) +
labs(title = "Vísitölur yfir Tíma", x = "Ár", y = "Vísitala") +
scale_color_manual(name = "Vísitala", values = c(
"Vísitala neysluverðs án húsnæðis" = "green",
"Vísitala fjölbílishús" = "orange",
"Vísitala sérbíli" = "blue",
"Vísitala íbúðarverðs" = "red"
)) +
theme_minimal()
})
# Þriðji flipa: Samanburður á tekjum og fasteignaverði
output$combinedPlot <- renderPlot({
tekjur_filtered <- tekjur %>%
filter(Sveitarfelag == input$sveitarfelag) %>%
pivot_longer(cols = -Sveitarfelag, names_to = "Ar", values_to = "Tekjur") %>%
mutate(Ar = as.numeric(Ar)) %>%
filter(Ar >= 2010)
fasteignaverd_filtered <- fasteignaverd %>%
filter(SVEITARFELAG == input$sveitarfelag) %>%
pivot_longer(cols = -SVEITARFELAG, names_to = "Ar", values_to = "Fasteignaverð") %>%
mutate(Ar = as.numeric(Ar)) %>%
filter(Ar >= 2010)
combined_data <- merge(tekjur_filtered, fasteignaverd_filtered, by = "Ar")
ggplot(combined_data, aes(x = Ar)) +
geom_line(aes(y = Tekjur, color = "Mánaðaralegar ráðstöfunartekjur"), size = 1) +
geom_line(aes(y = Fasteignaverð, color = "Meðal fermetraverð"), size = 1) +
labs(title = "Þróun á Tekjum og Fasteignaverði", x = "Ár", y = "Þús. krónur") +
scale_color_manual(name = "Breytur", values = c("Mánaðaralegar ráðstöfunartekjur" = "darkblue", "Meðal fermetraverð" = "#53c68c")) +
theme_minimal()
})
}
# Keyra app
shinyApp(ui = ui, server = server)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('capstone-samsett2.R')
runApp()
runApp()
runApp()
runApp()
